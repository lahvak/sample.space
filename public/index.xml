<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lahvak&#39;s Sample Space</title>
    <link>/</link>
    <description>Recent content on Lahvak&#39;s Sample Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 10 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Another stupid word problem</title>
      <link>/2019/12/10/another-stupid-word-problem/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/12/10/another-stupid-word-problem/</guid>
      <description>So I am grading intro algebra exams, and there is this problem:
The product of two consecutive positive even integers in 168. Find the integers.
Students are supposed to solve this by setting up and solving a quadratic equation \(x(x+2) = 168\). What’s stupid about this is that at this moment the only way to solve this equation that the students know is simple factoring, so they have to rewrite the equation as \(x^2 + 2x - 168 = 0\) and factor it.</description>
    </item>
    
    <item>
      <title>Parsing Exam Scantron Sheets with Cassava</title>
      <link>/2019/05/19/parsing-exam-scantron-sheet-with-cassava/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/05/19/parsing-exam-scantron-sheet-with-cassava/</guid>
      <description>For many years, our department has been organizing an annual math competition for local high school students, called imaginatively Math Olympics. Over time it went through a number of format changes, the current one being a 25 question multiple choice exam, with two different levels of difficulty. Students fill in Scantron bubble sheets, which are then scanned using a machine. Because of our specific scoring process, we do not use the scoring software that comes with the machine.</description>
    </item>
    
    <item>
      <title>Rows in tidyverse again</title>
      <link>/2019/04/30/rows-in-tidyverse-again/</link>
      <pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/30/rows-in-tidyverse-again/</guid>
      <description>In the last post I complained that there is no way to apply a formula to rows of a data frame so that the formula will consume the rows as lists or vectors. Turns out I was wrong, and there is a very easy way to do it!
Not only that, but I was actually really close to it, and if I was just reading the relevant documentation bit more carefully…</description>
    </item>
    
    <item>
      <title>Tidyverse: rows as vectors? (Updated)</title>
      <link>/2019/04/14/tidyverse-rows-as-vectors/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/14/tidyverse-rows-as-vectors/</guid>
      <description>This has been bothering me for a while: is there a good simple way to apply a formula to rows of a data frame or table, where the formula would consume the rows as vectors?
Update: There is actually a very simple way to do it. See the next post.
Motivation The section 3.3 of the Introductory Statistics with Randomization and Simulation contains the following example:
 In the first case, we consider data from a random sample of 275 jurors in a small county.</description>
    </item>
    
    <item>
      <title>How to comment on this blog</title>
      <link>/2019/04/09/how-to-comment-on-this-blog/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/09/how-to-comment-on-this-blog/</guid>
      <description>This blog uses utterance.es to enable commenting on posts. Utterances use GitHub issues to keep track of commens. Basically the way it works is, when you comment, an issue will be created on GitHub with your comment. Utterances then finds all issues related to a post, and displays them as comments at the bottom of the post.
This makes it easy for me, because all your comments are available to me on GitHub, where I can easily access and manage them.</description>
    </item>
    
    <item>
      <title>Visualize complex continuing fractions with Julia</title>
      <link>/2019/01/06/visualize-continuing-fractions-with-julia/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/06/visualize-continuing-fractions-with-julia/</guid>
      <description>I was sitting on this for few years now, using it as an example in a couple of seminar talks, but not really doing anything with it. It seems like a good candidate for a first post on my new blog.
Complex Domain Coloring A long time ago I ran across a website created by Frank Farris and Jeffrey Hoffstein, that showed some awesome images of automorphic functions created using a method for visualizing complex functions of complex variable called Complex Domain Coloring.</description>
    </item>
    
    <item>
      <title></title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>The sample space is a blog written by Jan Hlavacek.
It is currently written using Blogdown.</description>
    </item>
    
  </channel>
</rss>